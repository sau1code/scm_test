# Set the name of your workflow
name: IOSBuilder

# Controls when the action will run.
# [workflow_dispatch] --> allows to run the workflow manually
# you may use the following to build on each push
# on:
# push:
# branches: [ master ]
on:
  workflow_dispatch:
    inputs:
      app_store_connect_team_id:
        description: 'The ID of your App Store Connect Team.'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # In this workflow we use a single job called "build"
  build:
    # The type of runner ie, the OS that the job will run on. apart from mac windows and ubuntu are also available
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v2

      # Create the directories to hold the certificates and provisioning profiles
      - name: Create Certificate and Provisioning Profile Directories
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/MobileDevice/Certificates/

      # Decode and save the certificate stored as a secret
      - name: Decode Certificate
        id: cert-decode
        uses: apple-actions/import-certificate@v1
        with:
          certificate-base64: ${{ secrets.P12_BASE64 }}
          certificate-password: ${{ secrets.CERT_PASSWORD }}
          certificate-file-path: '~/Library/MobileDevice/Certificates/certificate.p12'

      # Decode and save the provisioning profile stored as a secret
      - name: Decode Provisioning Profile
        id: profile-decode
        uses: apple-actions/import-provisioning-profile@v1
        with:
          profile-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          profile-file-path: '~/Library/MobileDevice/Provisioning Profiles/profile.mobileprovision'

      # Install Codemagic CLI tools for iOS
      - name: Install Codemagic CLI Tools
        run: python -m pip install codemagic-cli-tools

      # Initialize the Keychain with the imported certificate
      - name: Initialize Keychain
        run: |
          security create-keychain -p '' build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p '' build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security import ~/Library/MobileDevice/Certificates/certificate.p12 -P ${{ secrets.CERT_PASSWORD }} -A -k build.keychain

      # Set the App Store Connect Team ID
      - name: Set App Store Connect Team ID
        run: xcode-project use-team-id ${{ github.event.inputs.app_store_connect_team_id }}

      # Install Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'

      # Get the dependencies
      - name: Get Dependencies
        run: flutter pub get

      # Build and sign the IPA
      - name: Build IPA
        run: |
          xcode-project use-profiles
          flutter build ios --release --no-codesign
          xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner --config Release
